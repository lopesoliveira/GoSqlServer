basePath: /api
definitions:
  request.CreateUserRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      name:
        maxLength: 500
        minLength: 1
        type: string
      password:
        maxLength: 500
        minLength: 1
        type: string
    required:
    - age
    - email
    - name
    - password
    type: object
  request.UpdateUserRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        maxLength: 500
        minLength: 1
        type: string
      password:
        maxLength: 500
        minLength: 1
        type: string
    required:
    - age
    - email
    - id
    - name
    - password
    type: object
  response.DeleteResponse:
    properties:
      success:
        type: boolean
    type: object
  response.UserResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: A User service API in Go using Gin framework
  title: Tag Service API
  version: "1.0"
paths:
  /user:
    get:
      description: Return list of users.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
      summary: Get All users.
      tags:
      - users
    post:
      description: Save user data in Db.
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
      summary: Create User
      tags:
      - user
  /user/{userId}:
    delete:
      description: Remove user data by id.
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteResponse'
      summary: Delete user
      tags:
      - user
    get:
      description: Return the user whose userId value matches id.
      parameters:
      - description: find user by id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
      summary: Get Single user by id.
      tags:
      - user
    patch:
      description: Update user data.
      parameters:
      - description: update user by id
        in: path
        name: userId
        required: true
        type: string
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
      summary: Update user
      tags:
      - user
swagger: "2.0"
